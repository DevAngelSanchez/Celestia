---
// No necesitas importar nada aquí para el formulario.
---

<form id="loginForm" class="space-y-6">
  <!-- Campo Usuario -->
  <div>
    <label for="username" class="block text-sm font-medium text-gray-700 mb-1"
      >Usuario</label
    >
    <input
      type="text"
      id="username"
      name="username"
      required
      class="block w-full px-4 py-2 text-gray-900 bg-gray-50 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
    />
  </div>

  <!-- Campo Contraseña -->
  <div>
    <label for="password" class="block text-sm font-medium text-gray-700 mb-1"
      >Contraseña</label
    >
    <input
      type="password"
      id="password"
      name="password"
      required
      class="block w-full px-4 py-2 text-gray-900 bg-gray-50 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
    />
  </div>

  <div id="errorMessage" class="text-red-500 text-sm mt-2 hidden invisible">
  </div>

  <!-- Botón de Enviar -->
  <button
    type="submit"
    class="w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md disabled:bg-blue-700/50 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
  >
    Iniciar sesión
  </button>
</form>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  const form: HTMLFormElement | null = document.querySelector("form#loginForm");
  const submitButton: HTMLButtonElement | null = document.querySelector(
    "button[type='submit']",
  );
  const errorMessageElement: HTMLElement | null =
    document.getElementById("errorMessage");

  let loading = false;

  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    loading = true;

    if (loading && submitButton) {
      submitButton.setAttribute("disabled", "true");
      submitButton.textContent = "Cargando...";
    }

    const formData = new FormData(form);

    const { data, error } = await actions.auth.login(formData);

    loading = false;
    if (!loading && submitButton) {
      submitButton.removeAttribute("disabled");
      submitButton.textContent = "Iniciar sesión";
    }

    if (error && errorMessageElement) {
      errorMessageElement.classList.remove("hidden", "invisible");
      errorMessageElement.textContent = "Usuario o contraseña invalida";

      setTimeout(() => {
        errorMessageElement.classList.add("hidden", "invisible");
        errorMessageElement.textContent = "";
      }, 3000);
      return;
    }

    if (data?.success) {
      navigate(data.redirectUri);
    }
  });
</script>
